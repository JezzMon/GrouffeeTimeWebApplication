@model FoodDisplayModel
@{
    Layout = "/Views/Shared/_NavigationBar.cshtml";
}

<header class="masthead">
    <div class="container">
        <div class="masthead-subheading">Welcome To Our Cafe!</div>
    </div>
</header>

<section class="food_section layout_padding-bottom">
    <div class="container-fluid">
        <div class="heading_container heading_center" id="menu">
            <h2>Our Menu</h2>
        </div>

        <ul class="filters_menu">
            <form asp-action="Index" class="row row-cols-lg-auto g-3 align-items-center my-2">
                <div class="col-12">
                    <div class="input-group">
                        <div class="input-group-text">
                            <i class="fa fa-magnifying-glass" aria-hidden="true"></i>
                        </div>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search for food..."
                            onkeyup="filterFoods()" />
                    </div>
                </div>

                <div class="col-12 mt-3">
                    <select id="sortSelect" class="form-control" onchange="sortFoods()">
                        <option value="name-asc">Sort by Name (A-Z)</option>
                        <option value="name-desc">Sort by Name (Z-A)</option>
                        <option value="price-asc">Sort by Price (Low-High)</option>
                        <option value="price-desc">Sort by Price (High-Low)</option>
                    </select>
                </div>

                <div class="col-12">
                    <label class="visually-hidden" for="categoryId">Categories</label>
                    <select class="form-select" id="categoryId" name="categoryId">
                        <option selected>Category</option>
                        @foreach (var category in Model.Categories)
                        {
                        <option selected="@(category.Id == Model.CategoryId)" value="@category.Id">
                            @category.CategoryName</option>
                        }
                    </select>
                </div>


                <div class="col-12">
                    <button type="submit" class="btn btn-primary">Search</button>
                    <a href="/Home/Index" class="btn btn-dark">Reset</a>
                </div>
            </form>
        </ul>

        <!-- Food Grid -->
        <div class="row grid align-items-center" id="foodGrid">
            @foreach (var food in Model.Foods)
            {
            <div class="col col-sm-4 col-lg-2 food-item" data-name="@food.FoodName" data-price="@food.Price">
                <div class="box shadow-lg">
                    <div>
                        <div class="img-box">
                            @if (string.IsNullOrEmpty(food.Image))
                            {
                            <img src="/images/NoImage.jpg" alt="">
                            }
                            else
                            {
                            <img src="/images/@food.Image" alt="">
                            }
                        </div>
                        <div class="detail-box">
                            <h5>@food.FoodName</h5>
                            <p1>@food.Description</p1>
                            <div class="options">
                                    <h6>₱@food.Price.ToString("0.00")</h6>
                                @if (food.Quantity > 0)
                                {
                                    @if (User.IsInRole("User"))
                                    {
                                        <button type="button" onclick="add(@food.Id)" class="btn btn-primary">
                                                <i class="fas fa-fw fa-basket-shopping"></i>
                                                <span>Add</span>
                                            </button>
                                    }
                                }
                                else
                                {
                                <span style="border: 1px solid;padding: 5px 8px;color: red;border-radius: 5px;">Not Available</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>

    <!-- Pagination -->
<div id="pagination" class="d-flex justify-content-center mt-4">
    <button class="btn btn-secondary" id="prevPage" onclick="changePage(-1)">Prev</button>
    <span id="pageNumber" class="mx-3">Page 1</span>
    <button class="btn btn-secondary" id="nextPage" onclick="changePage(1)">Next</button>
</div>
</section>


@section Scripts {
        <script>
        let currentPage = 1;
        const itemsPerPage = 12;
        let totalItems = @Model.Foods.Count();

        function displayPage(page) {
            const foodItems = document.querySelectorAll(".food-item");
            const startIndex = (page - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

            foodItems.forEach(item => item.style.display = "none");

            for (let i = startIndex; i < endIndex && i < foodItems.length; i++) {
                foodItems[i].style.display = "block";
            }

            document.getElementById("pageNumber").textContent = `Page ${page}`;

            document.getElementById("prevPage").disabled = page === 1;
            document.getElementById("nextPage").disabled = page === Math.ceil(totalItems / itemsPerPage);
        }

        function changePage(direction) {
            const newPage = currentPage + direction;


            if (newPage >= 1 && newPage <= Math.ceil(totalItems / itemsPerPage)) {
                currentPage = newPage;
                displayPage(currentPage);
            }
        }

        window.onload = function() {
            displayPage(currentPage);
        };
    </script>

<script>
    function filterFoods() {
        const searchInput = document.getElementById("searchInput").value.toLowerCase();
        const foodItems = document.querySelectorAll(".food-item");

        foodItems.forEach(item => {
            const name = item.getAttribute("data-name").toLowerCase();
            const description = item.querySelector("p").textContent.toLowerCase();

            if (name.includes(searchInput) || description.includes(searchInput)) {
                item.style.display = "block";
            } else {
                item.style.display = "none";
            }
        });
    }

    function sortFoods() {
        const foodGrid = document.getElementById("foodGrid");
        const foodItems = Array.from(foodGrid.getElementsByClassName("food-item"));
        const sortValue = document.getElementById("sortSelect").value;

        foodItems.sort((a, b) => {
            const nameA = a.getAttribute("data-name").toLowerCase();
            const nameB = b.getAttribute("data-name").toLowerCase();
            const priceA = parseFloat(a.getAttribute("data-price"));
            const priceB = parseFloat(b.getAttribute("data-price"));

            switch (sortValue) {
                case "name-asc":
                    return nameA.localeCompare(nameB);
                case "name-desc":
                    return nameB.localeCompare(nameA);
                case "price-asc":
                    return priceA - priceB;
                case "price-desc":
                    return priceB - priceA;
                default:
                    return 0;
            }
        });

        foodItems.forEach(item => foodGrid.appendChild(item));
    }

    async function add(foodId) {
        var usernameEl = document.getElementById("username");
        if (usernameEl == null) {
            window.location.href = "/Identity/Account/Login";
        }
        try {
            var response = await fetch(`/Cart/AddItem?foodId=${foodId}`);
            if (response.status == 200) {
                var result = await response.json();
                var cartCountEl = document.getElementById("cartCount");
                cartCountEl.innerHTML = result;
                window.location.href = "#cartCount";
            }
        }
        catch (err) {
            console.log(err);
        }
    }
</script>
}

