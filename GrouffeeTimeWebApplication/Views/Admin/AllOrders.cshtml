@model IEnumerable<Order>
@{
    ViewData["Title"] = "AllOrders";
    Layout = "_AdminLayout";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h2 class="m-0 font-weight-bold text-primary">Orders</h2>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            @if (Model != null && Model.Any())
            {
                <table id="ordersTable" class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Order Id</th>
                            <th>Order Date</th>
                            <th>Payment Method</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Mobile No</th>
                            <th>Address</th>
                            <th>Payment Status</th>
                            <th>Order Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>@order.Id</td>
                                <td>@order.CreateDate.ToString("dd-MM-yyyy")</td>
                                <td>@order.PaymentMethod</td>
                                <td>@order.Name</td>
                                <td>@order.Email</td>
                                <td>@order.MobileNumber</td>
                                <td>@order.Address</td>
                                <td>
                                    @if (order.IsPaid)
                                    {
                                        <span class="badge bg-success">Paid</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Not Paid</span>
                                    }
                                </td>
                                <td>@order.OrderStatus.StatusName</td>
                                <td>
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modal-@order.Id" title="View Order Details">Order Detail</button>
                                    <a asp-action="UpdateOrderStatus" asp-route-orderId="@order.Id" class="btn btn-info" title="Change Order Status">Change Order Status</a>
                                    <a asp-action="TogglePaymentStatus" asp-route-orderId="@order.Id" class="btn btn-warning" title="Toggle Payment Status">Toggle Payment Status</a>
                                    @await Html.PartialAsync("/Views/Admin/_OrderDetail.cshtml", new OrderDetailDto { DivId = order.Id.ToString(), OrderDetail = order.OrderDetail })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <h5>No orders found.</h5>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        new Table('#ordersTable');
    });
    </script>

    <script>
        // Ensure modal behavior is smooth, and the modal is closed after update actions.
        document.addEventListener('DOMContentLoaded', function() {
            var modal = new bootstrap.Modal(document.getElementById('modal-@Model.FirstOrDefault()?.Id'));
            modal.hide();
        });
    </script>
}
